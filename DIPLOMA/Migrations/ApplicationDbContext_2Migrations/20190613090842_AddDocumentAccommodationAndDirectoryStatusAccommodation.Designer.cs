// <auto-generated />
using System;
using DIPLOMA.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DIPLOMA.Migrations.ApplicationDbContext_2Migrations
{
    [DbContext(typeof(ApplicationDbContext_2))]
    [Migration("20190613090842_AddDocumentAccommodationAndDirectoryStatusAccommodation")]
    partial class AddDocumentAccommodationAndDirectoryStatusAccommodation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DIPLOMA.Models.DirectoryCategoryRooms", b =>
                {
                    b.Property<int>("DirectoryCategoryRoomsID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryRoom")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("DirectoryCategoryRoomsID");

                    b.ToTable("CategoryRooms");
                });

            modelBuilder.Entity("DIPLOMA.Models.DirectoryClients", b =>
                {
                    b.Property<int>("DirectoryClientsID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressRegistration")
                        .IsRequired();

                    b.Property<string>("AddressResidential")
                        .IsRequired();

                    b.Property<DateTime>("ClientDate");

                    b.Property<string>("DataAboutWorkPlace")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<string>("PassportSerial")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("TelephoneNumber")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.HasKey("DirectoryClientsID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("DIPLOMA.Models.DirectoryEmployees", b =>
                {
                    b.Property<int>("DirectoryEmployeesID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressRegistration")
                        .IsRequired();

                    b.Property<string>("AddressResidential")
                        .IsRequired();

                    b.Property<int>("DirectoryServicesID");

                    b.Property<string>("Education")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<DateTime>("EmployeeDate");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("MaritalStatus");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<string>("PassportSerial")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("TelephoneNumber")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.HasKey("DirectoryEmployeesID");

                    b.HasIndex("DirectoryServicesID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("DIPLOMA.Models.DirectoryRooms", b =>
                {
                    b.Property<int>("DirectoryRoomsID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CostPerDay")
                        .HasColumnType("money");

                    b.Property<int>("DirectoryCategoryRoomsID");

                    b.Property<int>("DirectoryStatusRoomsID");

                    b.Property<int>("DirectoryTypeRoomsID");

                    b.Property<string>("NumberRoom")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("DirectoryRoomsID");

                    b.HasIndex("DirectoryCategoryRoomsID");

                    b.HasIndex("DirectoryStatusRoomsID");

                    b.HasIndex("DirectoryTypeRoomsID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("DIPLOMA.Models.DirectoryServices", b =>
                {
                    b.Property<int>("DirectoryServicesID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("DirectoryServicesID");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("DIPLOMA.Models.DirectoryStatusAccommodation", b =>
                {
                    b.Property<int>("DirectoryStatusAccommodationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusAccommodation")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("DirectoryStatusAccommodationID");

                    b.ToTable("StatusAccommodation");
                });

            modelBuilder.Entity("DIPLOMA.Models.DirectoryStatusRooms", b =>
                {
                    b.Property<int>("DirectoryStatusRoomsID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusRoom")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("DirectoryStatusRoomsID");

                    b.ToTable("StatusRooms");
                });

            modelBuilder.Entity("DIPLOMA.Models.DirectoryTypeRooms", b =>
                {
                    b.Property<int>("DirectoryTypeRoomsID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeRoom")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("DirectoryTypeRoomsID");

                    b.ToTable("TypeRooms");
                });

            modelBuilder.Entity("DIPLOMA.Models.DocumentAccommodation", b =>
                {
                    b.Property<int>("DocumentAccommodationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressRegistration");

                    b.Property<string>("AddressResidential");

                    b.Property<DateTime>("ClientDate");

                    b.Property<decimal>("CostPerDay")
                        .HasColumnType("money");

                    b.Property<decimal>("CostTotal")
                        .HasColumnType("money");

                    b.Property<string>("DataAboutWorkPlace");

                    b.Property<DateTime>("DateAccommodation");

                    b.Property<DateTime>("DateEviction");

                    b.Property<int>("DirectoryCategoryRoomsID");

                    b.Property<int>("DirectoryStatusAccommodationID");

                    b.Property<int>("DirectoryTypeRoomsID");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("NumberOfPersons");

                    b.Property<string>("NumberRoom")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("PassportNumber")
                        .HasMaxLength(6);

                    b.Property<string>("PassportSerial")
                        .HasMaxLength(4);

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<decimal>("Payment")
                        .HasColumnType("money");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("TelephoneNumber")
                        .HasMaxLength(11);

                    b.HasKey("DocumentAccommodationID");

                    b.HasIndex("DirectoryCategoryRoomsID");

                    b.HasIndex("DirectoryStatusAccommodationID");

                    b.HasIndex("DirectoryTypeRoomsID");

                    b.ToTable("Accommodation");
                });

            modelBuilder.Entity("DIPLOMA.Models.DirectoryEmployees", b =>
                {
                    b.HasOne("DIPLOMA.Models.DirectoryServices", "DirectoryServices")
                        .WithMany("Employees")
                        .HasForeignKey("DirectoryServicesID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DIPLOMA.Models.DirectoryRooms", b =>
                {
                    b.HasOne("DIPLOMA.Models.DirectoryCategoryRooms", "DirectoryCategoryRooms")
                        .WithMany("Rooms")
                        .HasForeignKey("DirectoryCategoryRoomsID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DIPLOMA.Models.DirectoryStatusRooms", "DirectoryStatusRooms")
                        .WithMany("Rooms")
                        .HasForeignKey("DirectoryStatusRoomsID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DIPLOMA.Models.DirectoryTypeRooms", "DirectoryTypeRooms")
                        .WithMany("Rooms")
                        .HasForeignKey("DirectoryTypeRoomsID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DIPLOMA.Models.DocumentAccommodation", b =>
                {
                    b.HasOne("DIPLOMA.Models.DirectoryCategoryRooms", "DirectoryCategoryRooms")
                        .WithMany()
                        .HasForeignKey("DirectoryCategoryRoomsID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DIPLOMA.Models.DirectoryStatusAccommodation", "DirectoryStatusBooking")
                        .WithMany("Accommodation")
                        .HasForeignKey("DirectoryStatusAccommodationID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DIPLOMA.Models.DirectoryTypeRooms", "DirectoryTypeRooms")
                        .WithMany()
                        .HasForeignKey("DirectoryTypeRoomsID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
